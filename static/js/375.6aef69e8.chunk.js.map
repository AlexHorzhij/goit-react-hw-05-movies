{"version":3,"file":"static/js/375.6aef69e8.chunk.js","mappings":"gRAIaA,EAAeC,EAAAA,GAAAA,IAAH,+CAGZC,EAAgBD,EAAAA,GAAAA,IAAH,iKAQbE,EAAeF,EAAAA,GAAAA,IAAH,uJAOZG,GAAiBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,gWAedK,GAAsBL,EAAAA,EAAAA,IAAOM,EAAAA,IAAPN,CAAH,qFAMnBO,EAAYP,EAAAA,GAAAA,GAAH,yEAKTQ,EAAQR,EAAAA,GAAAA,GAAH,0EAKLS,EAAOT,EAAAA,GAAAA,EAAH,8FAMJU,EAAKV,EAAAA,GAAAA,GAAH,6G,SCrDA,SAASW,IAAe,IAAD,EAClC,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAO,UAAAF,EAASG,aAAT,eAAgBD,OAAQ,IAE/BE,EAAW,SAACC,GAGd,OAFeL,EAASM,SAASC,SAASF,GACvB,kBAAcP,GAAd,kBAAgCA,EAAhC,YAAsCO,EAE5D,EAOD,IALAG,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaX,GAAIY,KAAKb,EACzB,GAAE,CAACC,KAGCF,EAAQ,OAAO,KACpB,IACMe,EAAaf,EAAKgB,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAET,IAAN,IACpC,OACI,6BACI,UAACnB,EAAD,CAAgB6B,GAAIb,EAApB,WAA0B,SAACd,EAAD,IAA1B,cACA,UAACJ,EAAD,YACI,SAACF,EAAD,WACI,gBAAKkC,IAAG,yCAAoCpB,EAAKqB,aAP7C,oCAO2EC,IAAI,QAEvF,4BACI,SAAC5B,EAAD,UAAYM,EAAKuB,SACjB,UAAC3B,EAAD,0BAAmB4B,KAAKC,MAA0B,GAApBzB,EAAK0B,cAAnC,QACA,SAAC/B,EAAD,wBACA,SAACC,EAAD,UAAOI,EAAK2B,YACZ,SAAChC,EAAD,sBACA,SAACC,EAAD,UAAOmB,EAAWa,KAAK,eAG/B,UAACvC,EAAD,YACI,SAACM,EAAD,oCACA,2BACI,SAACE,EAAD,WACI,SAAC,KAAD,CAAiBsB,GAAIX,EAAS,QAASD,MAAO,CAAED,KAAAA,GAAhD,iBAAU,WAEd,SAACT,EAAD,WACI,SAAC,KAAD,CAAoBsB,GAAIX,EAAS,WAAYD,MAAO,CAAED,KAAAA,GAAtD,oBAAU,oBAItB,SAAC,KAAD,MAGX,C,sLCxDKuB,EAAQC,EAAAA,IAAAA,EAERC,EAAQ,gCACRC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAE4BJ,EAAMK,IAAN,UAChBH,EADgB,sCACsBC,IAHlD,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B0B,GAA5B,gGAE4BV,EAAMK,IAAN,UAChBH,EADgB,iBACCQ,EADD,oBACqBP,IAHjD,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAE4BV,EAAMK,IAAN,UAChBH,EADgB,iBACCQ,EADD,4BAC6BP,EAD7B,oBAF5B,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,gGAE4BV,EAAMK,IAAN,UAChBH,EADgB,iBACCQ,EADD,4BAC6BP,EAD7B,2BAF5B,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0EACCA,EADD,0EAG4Bd,EAAMK,IAAN,UAChBH,EADgB,gCACgBC,EADhB,iCAC4CW,EAD5C,YAH5B,cAGWR,EAHX,yBAMYA,EAASC,MANrB,gCAQKC,QAAQC,MAAR,MARL,gF","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/ApiServise.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\nimport { IoArrowUndoOutline } from \"react-icons/io5\";\n\nexport const ImgContainer = styled.div`\n    min-width: 300px;\n`\nexport const InfoContainer = styled.div`\n    display: flex;\n    gap: 20px;\n    padding: 15px 0px;\n    padding-left:30px;\n    box-shadow: 5px 5px 5px 1px rgba(0, 0, 0, 0.2);\n`\n\nexport const AddContainer = styled.div`\n    padding: 15px 0px;\n    margin-bottom: 20px;\n    padding-left:30px;\n    box-shadow: 5px 5px 5px 1px rgba(0, 0, 0, 0.2);\n`\n\nexport const BackButtonLink = styled(NavLink)`\n    display: inline-flex;\n    align-items: center;\n    /* border-bottom: 1px solid gray; */\n    padding: 4px 10px 4px 6px;\n    font-size: 1.17em;\n    font-weight: 500;\n    margin-left: 30px;\n    \n    :hover{\n        background-color: rgba(0, 0, 0, 0.1);\n        box-shadow: 1px 1px 5px 5px rgba(0, 0, 0, 0.1);\n    }\n`\n\nexport const IoArrowUndoOutlineM = styled(IoArrowUndoOutline)`\n    margin-right: 8px;\n    width: 30px;\n    height: 20px;\n`\n\nexport const FilmTitle = styled.h2`\n    font-size: 1.5em;\n    margin-bottom: 20px;\n`\n\nexport const Title = styled.h3`\n    font-size: 1.17em;\n    margin-bottom: 20px;\n`\n\nexport const Text = styled.p`\n    font-size: 1em;\n    margin-bottom: 20px;\n    line-height: 1.5;\n`\n\nexport const Li = styled.li`\n    margin-bottom: 10px;\n\n    :hover{\n        text-decoration: underline;\n    }\n`","import { useState, useEffect } from \"react\";\nimport { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport { getMovieById } from \"services/ApiServise\";\nimport { InfoContainer, AddContainer } from \"./MovieDetails.styled\";\nimport { BackButtonLink, IoArrowUndoOutlineM, FilmTitle, Title, Text, Li, ImgContainer } from './MovieDetails.styled';\n\nexport default function MovieDetails(){\n    const [film, setFilm] = useState(null);\n    const { id } = useParams();\n    const location = useLocation();\n    const from = location.state?.from || \"/\";\n\n    const infoLink = (name) => {\n        const toggle = location.pathname.includes(name);\n        const link = toggle ? `/movies/${id}` : `/movies/${id}/${name}`;\n        return link;\n    }\n  \n    useEffect(() => {\n        getMovieById(id).then(setFilm)\n    }, [id]\n    );\n\n    if (!film) { return null }\n    const placeholder = '/kqjL17yufvn9OVLyXYpvtyrFfak.jpg';\n    const genresFilm = film.genres.map(a => a.name)\n    return (\n        <main>\n            <BackButtonLink to={from}><IoArrowUndoOutlineM />Go back</BackButtonLink>\n            <InfoContainer>\n                <ImgContainer>\n                    <img src={`https://image.tmdb.org/t/p/w300${film.poster_path || placeholder}`} alt=\"\" />\n                </ImgContainer>\n                <div>\n                    <FilmTitle>{film.title}</FilmTitle>\n                    <Text>User Score: {Math.round(film.vote_average * 10)}%</Text>\n                    <Title>Overview</Title>\n                    <Text>{film.overview}</Text>\n                    <Title>Genres</Title>\n                    <Text>{genresFilm.join(\", \")}</Text>\n                </div>\n            </InfoContainer>\n            <AddContainer>\n                <Title>Addition information</Title>\n                <ul>\n                    <Li>\n                        <Link key=\"cast\" to={infoLink(\"cast\")} state={{ from }}>Cast</Link>\n                    </Li>\n                    <Li>\n                        <Link key=\"reviewe\" to={infoLink(\"reviewe\")} state={{ from }}>Reviewe</Link>\n                    </Li>\n                </ul>\n            </AddContainer>\n            <Outlet />\n        </main>\n    )\n};","const axios = require('axios').default;\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst KEY = '2c7b4a4208b8b77d3cb05264c9eb54e5';\n\nexport async function getTrending() {\n        try {\n            const response = await axios.get(\n                `${BASE_URL}trending/movie/day?api_key=${KEY}`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getMovieById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}?api_key=${KEY}`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getCreditsById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getReviewsById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getSearchMovies(query) {\n    if(!query){return} \n      try {\n            const response = await axios.get(\n                `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n"],"names":["ImgContainer","styled","InfoContainer","AddContainer","BackButtonLink","NavLink","IoArrowUndoOutlineM","IoArrowUndoOutline","FilmTitle","Title","Text","Li","MovieDetails","useState","film","setFilm","id","useParams","location","useLocation","from","state","infoLink","name","pathname","includes","useEffect","getMovieById","then","genresFilm","genres","map","a","to","src","poster_path","alt","title","Math","round","vote_average","overview","join","axios","require","BASE_URL","KEY","getTrending","get","response","data","console","error","movie_id","getCreditsById","getReviewsById","getSearchMovies","query"],"sourceRoot":""}