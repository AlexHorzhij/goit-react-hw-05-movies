{"version":3,"file":"static/js/387.b274e424.chunk.js","mappings":"+PAGaA,EAAMC,EAAAA,GAAAA,IAAH,0FAGI,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,MAAM,EAAhB,IAGRC,EAAKJ,EAAAA,GAAAA,GAAH,uEAEM,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,MAAM,EAAhB,IAGTE,EAAOL,EAAAA,GAAAA,IAAH,wEACA,SAAAC,GAAC,OAAEA,EAAEC,MAAMI,SAASC,CAAnB,IACG,SAAAN,GAAC,OAAEA,EAAEC,MAAMC,MAAM,EAAhB,IAGTK,EAAcR,EAAAA,GAAAA,GAAH,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,MAAM,EAAhB,IAGNM,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,IAAPV,CAAH,gFACd,SAAAC,GAAC,OAAIA,EAAEC,MAAMS,OAAOC,IAAnB,I,SCpBC,SAASC,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,IALAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeH,GAAII,KAAKL,EAC3B,GAAE,CAACC,IAGAF,EACA,OACI,SAACP,EAAD,UACKO,EAAQO,KAAKC,KAAI,SAAAC,GAAK,OAAK,UAACpB,EAAD,WACxBoB,EAAMC,cAAe,SAAC1B,EAAD,CAAK2B,IAAG,yCAAoCF,EAAMC,cAAgBE,IAAKH,EAAMI,QAAW,SAACnB,EAAD,KAC7G,4BAAK,UAACJ,EAAD,YAAM,mCAAN,IAAsBmB,EAAMI,SAC7B,UAACvB,EAAD,YAAM,sCAAN,IAAyBmB,EAAMK,kBAHFL,EAAMM,UAApB,KAOtC,C,sLCxBKC,EAAQC,EAAAA,IAAAA,EAERC,EAAQ,gCACRC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAE4BJ,EAAMK,IAAN,UAChBH,EADgB,sCACsBC,IAHlD,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAE4BX,EAAMK,IAAN,UAChBH,EADgB,iBACCS,EADD,oBACqBR,IAHjD,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BsB,GAA9B,gGAE4BX,EAAMK,IAAN,UAChBH,EADgB,iBACCS,EADD,4BAC6BR,EAD7B,oBAF5B,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAE4BX,EAAMK,IAAN,UAChBH,EADgB,iBACCS,EADD,4BAC6BR,EAD7B,2BAF5B,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0EACCA,EADD,0EAG4Bd,EAAMK,IAAN,UAChBH,EADgB,gCACgBC,EADhB,iCAC4CW,EAD5C,YAH5B,cAGWR,EAHX,yBAMYA,EAASC,MANrB,gCAQKC,QAAQC,MAAR,MARL,gF","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/ApiServise.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { IoPerson } from \"react-icons/io5\";\n\nexport const Img = styled.img`\n    display: block;\n    width: 120px;\n    margin-right: ${p=>p.theme.space[4]}px;\n`\n\nexport const Li = styled.li`\n    display: flex;\n    margin-bottom: ${p=>p.theme.space[4]}px;\n`\n\nexport const Name = styled.div`\n    font-size: ${p=>p.theme.fontSize.s};\n    margin-bottom: ${p=>p.theme.space[3]}px;\n`\n\nexport const CastWrapper = styled.ul`\n    padding-left:${p => p.theme.space[5]}px;\n    padding-top:${p=>p.theme.space[5]}px;\n`\n\nexport const PlaceholderImg = styled(IoPerson)`\n    color: ${p => p.theme.colors.main};\n    width: 120px;\n    height: 180px;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsById } from '../../services/ApiServise';\nimport { Img, Li, Name, CastWrapper, PlaceholderImg } from './Cast.styled';\n\nexport default function Cast(){\n    const [credits, setCredits] = useState(null);\n    const { id } = useParams();\n\n    useEffect(() => {\n        getCreditsById(id).then(setCredits)\n    }, [id]\n    );\n    // const placeholder = '/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg';\n    if (credits) {\n        return (\n            <CastWrapper>\n                {credits.cast.map(actor => (<Li key={actor.credit_id}>\n                   {actor.profile_path ? <Img src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`} alt={actor.name} /> : <PlaceholderImg />}\n                    <div><Name><b>Acthor:</b> {actor.name}</Name>\n                        <Name><b>Character:</b> {actor.character}</Name></div></Li>))}\n            </CastWrapper>\n        )\n    }\n};\n\n\n    // <CastWrapper>\n    //             {credits.cast.map(actor => (<Li key={actor.credit_id}>\n    //                 <Img src={`https://image.tmdb.org/t/p/w300${actor.profile_path || placeholder}`} alt={actor.name} />\n    //                 <div><Name><b>Acthor:</b> {actor.name}</Name>\n    //                     <Name><b>Character:</b> {actor.character}</Name></div></Li>))}\n    //         </CastWrapper>","const axios = require('axios').default;\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst KEY = '2c7b4a4208b8b77d3cb05264c9eb54e5';\n\nexport async function getTrending() {\n        try {\n            const response = await axios.get(\n                `${BASE_URL}trending/movie/day?api_key=${KEY}`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getMovieById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}?api_key=${KEY}`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getCreditsById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getReviewsById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getSearchMovies(query) {\n    if(!query){return} \n      try {\n            const response = await axios.get(\n                `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n"],"names":["Img","styled","p","theme","space","Li","Name","fontSize","s","CastWrapper","PlaceholderImg","IoPerson","colors","main","Cast","useState","credits","setCredits","id","useParams","useEffect","getCreditsById","then","cast","map","actor","profile_path","src","alt","name","character","credit_id","axios","require","BASE_URL","KEY","getTrending","get","response","data","console","error","getMovieById","movie_id","getReviewsById","getSearchMovies","query"],"sourceRoot":""}