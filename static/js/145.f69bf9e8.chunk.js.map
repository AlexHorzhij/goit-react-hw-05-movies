{"version":3,"file":"static/js/145.f69bf9e8.chunk.js","mappings":"qPAEaA,EAAKC,EAAAA,GAAAA,GAAH,kDAIFC,EAASD,EAAAA,GAAAA,GAAH,kDAINE,EAAOF,EAAAA,GAAAA,EAAH,+CAIJG,EAAcH,EAAAA,GAAAA,EAAH,iD,SCTT,SAASI,IACpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,IALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GAAIO,KAAKH,EAC3B,GAAE,CAACJ,IAGAG,EACJ,OACKA,EAAQK,QAAQC,OAAS,GAAK,wBAC1BN,EAAQK,QAAQE,KAAI,SAAAC,GAAI,OAAI,UAACjB,EAAD,YAAkB,UAACE,EAAD,sBAAiBe,EAAKC,eAAeC,aAChF,SAAChB,EAAD,UAAOc,EAAKG,UADa,MAASH,EAAKX,GAAlB,OAGrB,SAACF,EAAD,sDAEf,C,sLCtBKiB,EAAQC,EAAAA,IAAAA,EAERC,EAAQ,gCACRC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAE4BJ,EAAMK,IAAN,UAChBH,EADgB,sCACsBC,IAHlD,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAE4BX,EAAMK,IAAN,UAChBH,EADgB,iBACCS,EADD,oBACqBR,IAHjD,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAE4BX,EAAMK,IAAN,UAChBH,EADgB,iBACCS,EADD,4BAC6BR,EAD7B,oBAF5B,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BoB,GAA9B,gGAE4BX,EAAMK,IAAN,UAChBH,EADgB,iBACCS,EADD,4BAC6BR,EAD7B,2BAF5B,cAEWG,EAFX,yBAKYA,EAASC,MALrB,gCAOKC,QAAQC,MAAR,MAPL,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,0EACCA,EADD,0EAG4Bd,EAAMK,IAAN,UAChBH,EADgB,gCACgBC,EADhB,iCAC4CW,EAD5C,YAH5B,cAGWR,EAHX,yBAMYA,EAASC,MANrB,gCAQKC,QAAQC,MAAR,MARL,gF","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviewe.jsx","services/ApiServise.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Li = styled.li`\n    margin-bottom: 20px;\n`;\n\nexport const Author = styled.h3`\n    margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n    line-height: 1.5;\n`;\n\nexport const Placeholder = styled.p`\n    padding-left: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from '../../services/ApiServise';\nimport { Placeholder, Li, Author, Text } from './Reviews.styled';\n\nexport default function Reviewe(){\n    const { id } = useParams();\n    const [reviewe, setReviewe] = useState(null);\n\n    useEffect(() => {\n        getReviewsById(id).then(setReviewe)\n    }, [id]\n    );\n    \n    if (reviewe) {  \n    return (\n         reviewe.results.length > 0  ? <ul>\n            {reviewe.results.map(item => <Li key={item.id}><Author>Author: {item.author_details.username}</Author>\n                <Text>{item.content}</Text> </Li>)\n            }\n        </ul> : <Placeholder>We don`t have any rewiews for this movie</Placeholder>\n    )}\n};","const axios = require('axios').default;\n\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nconst KEY = '2c7b4a4208b8b77d3cb05264c9eb54e5';\n\nexport async function getTrending() {\n        try {\n            const response = await axios.get(\n                `${BASE_URL}trending/movie/day?api_key=${KEY}`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getMovieById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}?api_key=${KEY}`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getCreditsById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}&language=en-US`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getReviewsById(movie_id) {\n      try {\n            const response = await axios.get(\n                `${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n\nexport async function getSearchMovies(query) {\n    if(!query){return} \n      try {\n            const response = await axios.get(\n                `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n            );\n            return response.data;\n        } catch (error) {\n            console.error(error);\n        }\n};\n"],"names":["Li","styled","Author","Text","Placeholder","Reviewe","id","useParams","useState","reviewe","setReviewe","useEffect","getReviewsById","then","results","length","map","item","author_details","username","content","axios","require","BASE_URL","KEY","getTrending","get","response","data","console","error","getMovieById","movie_id","getCreditsById","getSearchMovies","query"],"sourceRoot":""}